# automatically generated by the FlatBuffers compiler, do not modify

# namespace: tflite

class BuiltinOptions(object):
    NONE = 0
    Conv2DOptions = 1
    DepthwiseConv2DOptions = 2
    ConcatEmbeddingsOptions = 3
    LSHProjectionOptions = 4
    Pool2DOptions = 5
    SVDFOptions = 6
    RNNOptions = 7
    FullyConnectedOptions = 8
    SoftmaxOptions = 9
    ConcatenationOptions = 10
    AddOptions = 11
    L2NormOptions = 12
    LocalResponseNormalizationOptions = 13
    LSTMOptions = 14
    ResizeBilinearOptions = 15
    CallOptions = 16
    ReshapeOptions = 17
    SkipGramOptions = 18
    SpaceToDepthOptions = 19
    EmbeddingLookupSparseOptions = 20
    MulOptions = 21
    PadOptions = 22
    GatherOptions = 23
    BatchToSpaceNDOptions = 24
    SpaceToBatchNDOptions = 25
    TransposeOptions = 26
    ReducerOptions = 27
    SubOptions = 28
    DivOptions = 29
    SqueezeOptions = 30
    SequenceRNNOptions = 31
    StridedSliceOptions = 32
    ExpOptions = 33
    TopKV2Options = 34
    SplitOptions = 35
    LogSoftmaxOptions = 36
    CastOptions = 37
    DequantizeOptions = 38
    MaximumMinimumOptions = 39
    ArgMaxOptions = 40
    LessOptions = 41
    NegOptions = 42
    PadV2Options = 43
    GreaterOptions = 44
    GreaterEqualOptions = 45
    LessEqualOptions = 46
    SelectOptions = 47
    SliceOptions = 48
    TransposeConvOptions = 49
    SparseToDenseOptions = 50
    TileOptions = 51
    ExpandDimsOptions = 52
    EqualOptions = 53
    NotEqualOptions = 54
    ShapeOptions = 55
    PowOptions = 56
    ArgMinOptions = 57
    FakeQuantOptions = 58
    PackOptions = 59
    LogicalOrOptions = 60
    OneHotOptions = 61
    LogicalAndOptions = 62
    LogicalNotOptions = 63
    UnpackOptions = 64
    FloorDivOptions = 65
    SquareOptions = 66
    ZerosLikeOptions = 67
    FillOptions = 68
    BidirectionalSequenceLSTMOptions = 69
    BidirectionalSequenceRNNOptions = 70
    UnidirectionalSequenceLSTMOptions = 71
    FloorModOptions = 72
    RangeOptions = 73
    ResizeNearestNeighborOptions = 74
    LeakyReluOptions = 75
    SquaredDifferenceOptions = 76
    MirrorPadOptions = 77
    AbsOptions = 78
    SplitVOptions = 79
    UniqueOptions = 80
    ReverseV2Options = 81
    AddNOptions = 82
    GatherNdOptions = 83
    CosOptions = 84
    WhereOptions = 85
    RankOptions = 86
    ReverseSequenceOptions = 87
    MatrixDiagOptions = 88
    QuantizeOptions = 89
    MatrixSetDiagOptions = 90
    HardSwishOptions = 91
    IfOptions = 92
    WhileOptions = 93
    DepthToSpaceOptions = 94
    NonMaxSuppressionV4Options = 95
    NonMaxSuppressionV5Options = 96
    ScatterNdOptions = 97
    SelectV2Options = 98
    DensifyOptions = 99
    SegmentSumOptions = 100
    BatchMatMulOptions = 101


def BuiltinOptionsCreator(unionType, table):
    from flatbuffers.table import Table
    if not isinstance(table, Table):
        return None
    if unionType == BuiltinOptions().Conv2DOptions:
        import tflite_model.Conv2DOptions
        return tflite_model.Conv2DOptions.Conv2DOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().DepthwiseConv2DOptions:
        import tflite_model.DepthwiseConv2DOptions
        return tflite_model.DepthwiseConv2DOptions.DepthwiseConv2DOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ConcatEmbeddingsOptions:
        import tflite_model.ConcatEmbeddingsOptions
        return tflite_model.ConcatEmbeddingsOptions.ConcatEmbeddingsOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LSHProjectionOptions:
        import tflite_model.LSHProjectionOptions
        return tflite_model.LSHProjectionOptions.LSHProjectionOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().Pool2DOptions:
        import tflite_model.Pool2DOptions
        return tflite_model.Pool2DOptions.Pool2DOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SVDFOptions:
        import tflite_model.SVDFOptions
        return tflite_model.SVDFOptions.SVDFOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().RNNOptions:
        import tflite_model.RNNOptions
        return tflite_model.RNNOptions.RNNOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().FullyConnectedOptions:
        import tflite_model.FullyConnectedOptions
        return tflite_model.FullyConnectedOptions.FullyConnectedOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SoftmaxOptions:
        import tflite_model.SoftmaxOptions
        return tflite_model.SoftmaxOptions.SoftmaxOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ConcatenationOptions:
        import tflite_model.ConcatenationOptions
        return tflite_model.ConcatenationOptions.ConcatenationOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().AddOptions:
        import tflite_model.AddOptions
        return tflite_model.AddOptions.AddOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().L2NormOptions:
        import tflite_model.L2NormOptions
        return tflite_model.L2NormOptions.L2NormOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LocalResponseNormalizationOptions:
        import tflite_model.LocalResponseNormalizationOptions
        return tflite_model.LocalResponseNormalizationOptions.LocalResponseNormalizationOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LSTMOptions:
        import tflite_model.LSTMOptions
        return tflite_model.LSTMOptions.LSTMOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ResizeBilinearOptions:
        import tflite_model.ResizeBilinearOptions
        return tflite_model.ResizeBilinearOptions.ResizeBilinearOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().CallOptions:
        import tflite_model.CallOptions
        return tflite_model.CallOptions.CallOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ReshapeOptions:
        import tflite_model.ReshapeOptions
        return tflite_model.ReshapeOptions.ReshapeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SkipGramOptions:
        import tflite_model.SkipGramOptions
        return tflite_model.SkipGramOptions.SkipGramOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SpaceToDepthOptions:
        import tflite_model.SpaceToDepthOptions
        return tflite_model.SpaceToDepthOptions.SpaceToDepthOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().EmbeddingLookupSparseOptions:
        import tflite_model.EmbeddingLookupSparseOptions
        return tflite_model.EmbeddingLookupSparseOptions.EmbeddingLookupSparseOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().MulOptions:
        import tflite_model.MulOptions
        return tflite_model.MulOptions.MulOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().PadOptions:
        import tflite_model.PadOptions
        return tflite_model.PadOptions.PadOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().GatherOptions:
        import tflite_model.GatherOptions
        return tflite_model.GatherOptions.GatherOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().BatchToSpaceNDOptions:
        import tflite_model.BatchToSpaceNDOptions
        return tflite_model.BatchToSpaceNDOptions.BatchToSpaceNDOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SpaceToBatchNDOptions:
        import tflite_model.SpaceToBatchNDOptions
        return tflite_model.SpaceToBatchNDOptions.SpaceToBatchNDOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().TransposeOptions:
        import tflite_model.TransposeOptions
        return tflite_model.TransposeOptions.TransposeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ReducerOptions:
        import tflite_model.ReducerOptions
        return tflite_model.ReducerOptions.ReducerOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SubOptions:
        import tflite_model.SubOptions
        return tflite_model.SubOptions.SubOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().DivOptions:
        import tflite_model.DivOptions
        return tflite_model.DivOptions.DivOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SqueezeOptions:
        import tflite_model.SqueezeOptions
        return tflite_model.SqueezeOptions.SqueezeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SequenceRNNOptions:
        import tflite_model.SequenceRNNOptions
        return tflite_model.SequenceRNNOptions.SequenceRNNOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().StridedSliceOptions:
        import tflite_model.StridedSliceOptions
        return tflite_model.StridedSliceOptions.StridedSliceOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ExpOptions:
        import tflite_model.ExpOptions
        return tflite_model.ExpOptions.ExpOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().TopKV2Options:
        import tflite_model.TopKV2Options
        return tflite_model.TopKV2Options.TopKV2OptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SplitOptions:
        import tflite_model.SplitOptions
        return tflite_model.SplitOptions.SplitOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LogSoftmaxOptions:
        import tflite_model.LogSoftmaxOptions
        return tflite_model.LogSoftmaxOptions.LogSoftmaxOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().CastOptions:
        import tflite_model.CastOptions
        return tflite_model.CastOptions.CastOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().DequantizeOptions:
        import tflite_model.DequantizeOptions
        return tflite_model.DequantizeOptions.DequantizeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().MaximumMinimumOptions:
        import tflite_model.MaximumMinimumOptions
        return tflite_model.MaximumMinimumOptions.MaximumMinimumOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ArgMaxOptions:
        import tflite_model.ArgMaxOptions
        return tflite_model.ArgMaxOptions.ArgMaxOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LessOptions:
        import tflite_model.LessOptions
        return tflite_model.LessOptions.LessOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().NegOptions:
        import tflite_model.NegOptions
        return tflite_model.NegOptions.NegOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().PadV2Options:
        import tflite_model.PadV2Options
        return tflite_model.PadV2Options.PadV2OptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().GreaterOptions:
        import tflite_model.GreaterOptions
        return tflite_model.GreaterOptions.GreaterOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().GreaterEqualOptions:
        import tflite_model.GreaterEqualOptions
        return tflite_model.GreaterEqualOptions.GreaterEqualOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LessEqualOptions:
        import tflite_model.LessEqualOptions
        return tflite_model.LessEqualOptions.LessEqualOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SelectOptions:
        import tflite_model.SelectOptions
        return tflite_model.SelectOptions.SelectOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SliceOptions:
        import tflite_model.SliceOptions
        return tflite_model.SliceOptions.SliceOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().TransposeConvOptions:
        import tflite_model.TransposeConvOptions
        return tflite_model.TransposeConvOptions.TransposeConvOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SparseToDenseOptions:
        import tflite_model.SparseToDenseOptions
        return tflite_model.SparseToDenseOptions.SparseToDenseOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().TileOptions:
        import tflite_model.TileOptions
        return tflite_model.TileOptions.TileOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ExpandDimsOptions:
        import tflite_model.ExpandDimsOptions
        return tflite_model.ExpandDimsOptions.ExpandDimsOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().EqualOptions:
        import tflite_model.EqualOptions
        return tflite_model.EqualOptions.EqualOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().NotEqualOptions:
        import tflite_model.NotEqualOptions
        return tflite_model.NotEqualOptions.NotEqualOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ShapeOptions:
        import tflite_model.ShapeOptions
        return tflite_model.ShapeOptions.ShapeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().PowOptions:
        import tflite_model.PowOptions
        return tflite_model.PowOptions.PowOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ArgMinOptions:
        import tflite_model.ArgMinOptions
        return tflite_model.ArgMinOptions.ArgMinOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().FakeQuantOptions:
        import tflite_model.FakeQuantOptions
        return tflite_model.FakeQuantOptions.FakeQuantOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().PackOptions:
        import tflite_model.PackOptions
        return tflite_model.PackOptions.PackOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LogicalOrOptions:
        import tflite_model.LogicalOrOptions
        return tflite_model.LogicalOrOptions.LogicalOrOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().OneHotOptions:
        import tflite_model.OneHotOptions
        return tflite_model.OneHotOptions.OneHotOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LogicalAndOptions:
        import tflite_model.LogicalAndOptions
        return tflite_model.LogicalAndOptions.LogicalAndOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LogicalNotOptions:
        import tflite_model.LogicalNotOptions
        return tflite_model.LogicalNotOptions.LogicalNotOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().UnpackOptions:
        import tflite_model.UnpackOptions
        return tflite_model.UnpackOptions.UnpackOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().FloorDivOptions:
        import tflite_model.FloorDivOptions
        return tflite_model.FloorDivOptions.FloorDivOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SquareOptions:
        import tflite_model.SquareOptions
        return tflite_model.SquareOptions.SquareOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ZerosLikeOptions:
        import tflite_model.ZerosLikeOptions
        return tflite_model.ZerosLikeOptions.ZerosLikeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().FillOptions:
        import tflite_model.FillOptions
        return tflite_model.FillOptions.FillOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().BidirectionalSequenceLSTMOptions:
        import tflite_model.BidirectionalSequenceLSTMOptions
        return tflite_model.BidirectionalSequenceLSTMOptions.BidirectionalSequenceLSTMOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().BidirectionalSequenceRNNOptions:
        import tflite_model.BidirectionalSequenceRNNOptions
        return tflite_model.BidirectionalSequenceRNNOptions.BidirectionalSequenceRNNOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().UnidirectionalSequenceLSTMOptions:
        import tflite_model.UnidirectionalSequenceLSTMOptions
        return tflite_model.UnidirectionalSequenceLSTMOptions.UnidirectionalSequenceLSTMOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().FloorModOptions:
        import tflite_model.FloorModOptions
        return tflite_model.FloorModOptions.FloorModOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().RangeOptions:
        import tflite_model.RangeOptions
        return tflite_model.RangeOptions.RangeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ResizeNearestNeighborOptions:
        import tflite_model.ResizeNearestNeighborOptions
        return tflite_model.ResizeNearestNeighborOptions.ResizeNearestNeighborOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().LeakyReluOptions:
        import tflite_model.LeakyReluOptions
        return tflite_model.LeakyReluOptions.LeakyReluOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SquaredDifferenceOptions:
        import tflite_model.SquaredDifferenceOptions
        return tflite_model.SquaredDifferenceOptions.SquaredDifferenceOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().MirrorPadOptions:
        import tflite_model.MirrorPadOptions
        return tflite_model.MirrorPadOptions.MirrorPadOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().AbsOptions:
        import tflite_model.AbsOptions
        return tflite_model.AbsOptions.AbsOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SplitVOptions:
        import tflite_model.SplitVOptions
        return tflite_model.SplitVOptions.SplitVOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().UniqueOptions:
        import tflite_model.UniqueOptions
        return tflite_model.UniqueOptions.UniqueOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ReverseV2Options:
        import tflite_model.ReverseV2Options
        return tflite_model.ReverseV2Options.ReverseV2OptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().AddNOptions:
        import tflite_model.AddNOptions
        return tflite_model.AddNOptions.AddNOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().GatherNdOptions:
        import tflite_model.GatherNdOptions
        return tflite_model.GatherNdOptions.GatherNdOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().CosOptions:
        import tflite_model.CosOptions
        return tflite_model.CosOptions.CosOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().WhereOptions:
        import tflite_model.WhereOptions
        return tflite_model.WhereOptions.WhereOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().RankOptions:
        import tflite_model.RankOptions
        return tflite_model.RankOptions.RankOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ReverseSequenceOptions:
        import tflite_model.ReverseSequenceOptions
        return tflite_model.ReverseSequenceOptions.ReverseSequenceOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().MatrixDiagOptions:
        import tflite_model.MatrixDiagOptions
        return tflite_model.MatrixDiagOptions.MatrixDiagOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().QuantizeOptions:
        import tflite_model.QuantizeOptions
        return tflite_model.QuantizeOptions.QuantizeOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().MatrixSetDiagOptions:
        import tflite_model.MatrixSetDiagOptions
        return tflite_model.MatrixSetDiagOptions.MatrixSetDiagOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().HardSwishOptions:
        import tflite_model.HardSwishOptions
        return tflite_model.HardSwishOptions.HardSwishOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().IfOptions:
        import tflite_model.IfOptions
        return tflite_model.IfOptions.IfOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().WhileOptions:
        import tflite_model.WhileOptions
        return tflite_model.WhileOptions.WhileOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().DepthToSpaceOptions:
        import tflite_model.DepthToSpaceOptions
        return tflite_model.DepthToSpaceOptions.DepthToSpaceOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().NonMaxSuppressionV4Options:
        import tflite_model.NonMaxSuppressionV4Options
        return tflite_model.NonMaxSuppressionV4Options.NonMaxSuppressionV4OptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().NonMaxSuppressionV5Options:
        import tflite_model.NonMaxSuppressionV5Options
        return tflite_model.NonMaxSuppressionV5Options.NonMaxSuppressionV5OptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().ScatterNdOptions:
        import tflite_model.ScatterNdOptions
        return tflite_model.ScatterNdOptions.ScatterNdOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SelectV2Options:
        import tflite_model.SelectV2Options
        return tflite_model.SelectV2Options.SelectV2OptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().DensifyOptions:
        import tflite_model.DensifyOptions
        return tflite_model.DensifyOptions.DensifyOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().SegmentSumOptions:
        import tflite_model.SegmentSumOptions
        return tflite_model.SegmentSumOptions.SegmentSumOptionsT.InitFromBuf(table.Bytes, table.Pos)
    if unionType == BuiltinOptions().BatchMatMulOptions:
        import tflite_model.BatchMatMulOptions
        return tflite_model.BatchMatMulOptions.BatchMatMulOptionsT.InitFromBuf(table.Bytes, table.Pos)
    return None
